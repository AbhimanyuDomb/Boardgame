name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: self-hosted

    steps:
      # Check out the repository
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Build with Maven
      run: mvn -B package --file pom.xml


    # Trivy FS Scan (via Docker)
    - name: Trivy FS Scan
      run: |
        docker run --rm -v $(pwd):/project aquasec/trivy fs --format table -o /project/fs.html /project
      # Upload FS scan report as an artifact
    - name: Upload FS Scan Report
      uses: actions/upload-artifact@v3
      with:
        name: fs-scan-report
        path: fs.html

    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      # Force to fail step after specific time.
      timeout-minutes: 5
      env:
       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
       SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    - name: Build Docker Image
      run: |
        docker build -t truong642003/boardgame:latest .


    # Trivy Image Scan (via Docker)
    - name: Trivy Image Scan
      run: |
        docker run --rm aquasec/trivy image --format table -o trivy-image-report.html truong642003/boardgame:latest
      # Upload Trivy Image scan report as an artifact
    - name: Upload Trivy Image Scan Report
      uses: actions/upload-artifact@v3
      with:
        name: trivy-image-report
        path: trivy-image-report.html

    - name: Push Docker Image
      run: |
          docker push truong642003/boardgame:latest




