name: Java CI with Maven and Deployment

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # Job: Setup
  # setup:
  #   runs-on: ubuntu-latest
  #   steps:
  #     # Check out the repository
  #     - name: Checkout Code
  #       uses: actions/checkout@v4

  #     # Remove conflicting packages and install dependencies
  #     - name: Install Dependencies
  #       run: |

  #         sudo apt-get install -y openjdk-17-jdk maven 
  #         echo "Dependencies installed successfully!"

  # Job: Build
  # build:
  #   runs-on: ubuntu-latest
  #   needs: setup  # Ensure Setup job runs first
  #   steps:
  #     # Check out the repository
  #     - name: Checkout Code
  #       uses: actions/checkout@v4

  #     # Build with Maven
  #     - name: Build with Maven
  #       run: mvn -B package --file pom.xml

  #     # Trivy FS Scan
  #     - name: Trivy FS Scan
  #       run: |
  #         docker run --rm -v $(pwd):/project aquasec/trivy fs --format table -o /project/fs.html /project
  #     # Upload FS Scan Report
  #     - name: Upload FS Scan Report
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: fs-scan-report
  #         path: fs.html

  #     # SonarCloud Scan
  #     - name: SonarCloud Scan
  #       uses: sonarsource/sonarcloud-github-action@master
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


  # Job: Deployment
  deployment:
    runs-on: ubuntu-latest
    #needs: build  # Ensure Build job runs first
    steps:
      # Check out the repository
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Build JAR with Maven
        run: |
          mvn package -DskipTests

        # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build Docker image
      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/boardgame:latest .

        # Push Docker Image to Docker Hub
      - name: Push Docker Image
        run: |
          docker push truong642003/boardgame:latest

      # Trivy Image Scan
      - name: Trivy Image Scan
        run: |
          docker run --rm aquasec/trivy image --format table -o trivy-image-report.html ${{ secrets.DOCKERHUB_USERNAME }}/boardgame:latest

      - name: Debug Output
        run: ls -R
      # Upload Trivy Image Scan Report
      - name: Upload Trivy Image Scan Report
        uses: actions/upload-artifact@v3
        with:
          name: trivy-image-report
          path: trivy-image-report.html



